---
import BaseLayout from "../layouts/BaseLayout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import { getCollection } from "astro:content";

const projects = await getCollection("projects");

const categoryOrder = ["habtrack", "discord_bot"];

const projectsByCategory = projects.reduce((acc, project) => {
	const category = project.data.category;
	if (!acc[category]) {
		acc[category] = [];
	}
	acc[category].push(project);
	return acc;
}, {} as Record<string, typeof projects>);

const sortedCategories = categoryOrder
	.filter(category => projectsByCategory[category])
	.map(category => [category, projectsByCategory[category]] as const);
---

<BaseLayout title="My Projects">
	<h1>Lande Projects</h1>
	<p class="subtitle">
		Stuff i've made
	</p>

	{sortedCategories.map(([category, categoryProjects]) => (
		<div class="category-section">
			<div class="grid">
				{categoryProjects.map((p) => (
					<ProjectCard
						title={p.data.title}
						description={p.data.description}
						buttons={p.data.buttons}
					/>
				))}
			</div>
		</div>
	))}
</BaseLayout>

<style>
	h1 {
		font-size: 2.5rem;
		font-weight: 700;
		text-align: center;
		margin-bottom: 0.5rem;
	}
	p.subtitle {
		color: #94a3b8;
		text-align: center;
		margin-bottom: 3rem;
	}
	.category-section {
		margin-bottom: 4rem;
	}
	.category-section:last-child {
		margin-bottom: 0;
	}

	.grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 1.5rem;
		max-width: 1000px;
		width: 100%;
	}

	@media (min-width: 1024px) {
		.grid {
			grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		}

		.grid > :global(*) {
			max-width: none;
		}
	}
</style>
